name: CI

on:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

concurrency:
  # Cancel any workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        # Some driver developers are building for WS2022 LTSC targets using VS2019 +
        # the Windows Server 2022 WDK, so validate our project still builds in that
        # environment, in addition to the default WS 2022.
        os: [2019, 2022]
        configuration: [Release, Debug]
        platform: [x64]
    runs-on: windows-${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        submodules: recursive
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2
    - name: Prepare Machine
      shell: PowerShell
      run: tools/prepare-machine.ps1 -ForBuild -Verbose
    - name: Nuget Restore
      run: nuget.exe restore wnt.sln
    - name: Build
      run: msbuild wnt.sln /m /p:configuration=${{ matrix.configuration }} /p:platform=${{ matrix.platform }} /p:SignMode=TestSign
    - name: Upload Artifacts
      if: matrix.os == 2022
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      with:
        name: bin_${{ matrix.configuration }}_${{ matrix.platform }}
        path: |
          artifacts/bin
          !artifacts/bin/**/*.ilk
          !artifacts/bin/**/*.exp
          !artifacts/bin/**/*.lastcodeanalysissucceeded

  functional_tests:
    name: Tests
    needs: build
    env:
      # For PRs
      prRuntime: 5 # Minutes. Update timeout-minutes with any changes.
      prIters: 1
      # For 'main' commits
      fullRuntime: 50 # Minutes. Update timeout-minutes with any changes.
      fullIters: 10
    strategy:
      fail-fast: false
      matrix:
        apimode: [UserMode, KernelMode]
        os: [2019, 2022]
        configuration: [Release, Debug]
        platform: [x64]
    runs-on: windows-${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        sparse-checkout: tools
    - name: Prepare Machine
      shell: PowerShell
      run: tools/prepare-machine.ps1 -ForFunctionalTest -NoReboot -Verbose
    - name: Download Artifacts
      uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
      with:
        name: bin_${{ matrix.configuration }}_${{ matrix.platform }}
        path: artifacts/bin
    - name: Run Tests (PR)
      if: ${{ github.event_name == 'pull_request' }}
      shell: PowerShell
      timeout-minutes: 10 # Intentionally 5 more than the test timeout to allow for watchdog timeout processing.
      run: tools/functional.ps1 -Verbose -Config ${{ matrix.configuration }} -Arch ${{ matrix.platform }} -Iterations ${{ env.prIters }} -Timeout ${{ env.prRuntime }} -${{ matrix.apimode }}
    - name: Run Tests (main)
      if: ${{ github.event_name != 'pull_request' }}
      shell: PowerShell
      timeout-minutes: 55 # Intentionally 5 more than the test timeout to allow for watchdog timeout processing.
      run: tools/functional.ps1 -Verbose -Config ${{ matrix.configuration }} -Arch ${{ matrix.platform }} -Iterations ${{ env.fullIters }} -Timeout ${{ env.fullRuntime }}
    - name: Convert Logs
      if: ${{ always() }}
      timeout-minutes: 5
      shell: PowerShell
      run: tools/log.ps1 -Convert -Name fnfunc* -Verbose -Config ${{ matrix.configuration }} -Arch ${{ matrix.platform }}
    - name: Upload Logs
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      if: ${{ always() }}
      with:
        name: logs_func_${{ matrix.apimode }}_${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.platform }}
        path: artifacts/logs

  create_artifacts:
    name: Create Release Artifacts
    needs: build
    strategy:
      fail-fast: false
      matrix:
        configuration: [Release]
        platform: [x64]
    runs-on: windows-2022
    steps:
    - name: Checkout repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
    - name: Download Artifacts
      uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
      with:
        name: bin_${{ matrix.configuration }}_${{ matrix.platform }}
        path: artifacts/bin
    - name: Create Nuget Package
      shell: PowerShell
      run: tools/create-nuget-package.ps1 -Config ${{ matrix.configuration }} -Platform ${{ matrix.platform }}
    - name: Create Dev Kit
      shell: PowerShell
      run: tools/create-devkit.ps1 -Config ${{ matrix.configuration }} -Platform ${{ matrix.platform }}
    - name: Create Runtime Kit
      shell: PowerShell
      run: tools/create-runtimekit.ps1 -Config ${{ matrix.configuration }} -Platform ${{ matrix.platform }}
    - name: Upload Release Artifacts
      uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
      with:
        name: release_artifacts_${{ matrix.configuration }}_${{ matrix.platform }}
        path: |
          artifacts/kit/**/*.zip
          artifacts/pkg/**/*.nupkg

  Complete:
    name: Complete
    if: always()
    needs: [build, functional_tests, create_artifacts]
    runs-on: ubuntu-latest
    permissions: {} # No need for any permissions.
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe
      with:
        jobs: ${{ toJSON(needs) }}
